name: 'Deploy Plugin'

on:
  workflow_call:
    inputs:
      plugin-name:
        required: true
        type: string
      plugin-repository:
        required: false
        type: string
        default: 'SlashNephy/divination-distrib'
    secrets:
      DEPLOY_GITHUB_TOKEN:
        required: true

permissions:
  actions: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Plugin Repository
        uses: actions/checkout@v4
        with:
          repository: '${{ inputs.plugin-repository }}'
          token: '${{ secrets.DEPLOY_GITHUB_TOKEN }}'

      - name: Download Artifact (release)
        uses: actions/download-artifact@v3
        with:
          name: '${{ inputs.plugin-name }}'
          path: 'plugins/testing/${{ inputs.plugin-name }}'

      - name: Download Artifact (gitversion.json)
        uses: actions/download-artifact@v3
        with:
          name: '${{ inputs.plugin-name }}-GitVersion'
          path: 'gitversion'

      - name: Read InformationalVersion
        id: version
        run: |
          value=$(cat gitversion/gitversion.json | jq .InformationalVersion)
          rm -rf gitversion
          echo "value=$value" >> $GITHUB_OUTPUT

      - name: Prepare commits.json
        run: |
          curl \
            -o plugins/testing/${{ inputs.plugin-name }}/commits.json \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.DEPLOY_GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/commits

      - name: Prepare event.json
        run: echo '${{ toJSON(github.event) }}' > plugins/testing/${{ inputs.plugin-name }}/event.json

      - name: Copy Artifact (stable)
        if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'
        run: |
          mkdir -p plugins/stable/${{ inputs.plugin-name }}
          cp -rf plugins/testing/${{ inputs.plugin-name }}/* plugins/stable/${{ inputs.plugin-name }}

      - name: Create Pull Request
        id: create-pull-request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.DEPLOY_GITHUB_TOKEN }}
          commit-message: '⚙️ Deploy ${{ inputs.plugin-name }} ${{ steps.version.outputs.value }}'
          author: StarryBlueSky-bot <97773209+StarryBlueSky-bot@users.noreply.github.com>
          branch: ci/update-plugin-master
          branch-suffix: random
          delete-branch: true
          title: '⚙️ Deploy ${{ inputs.plugin-name }} ${{ steps.version.outputs.value }}'

      - name: Automerge
        if: steps.create-pull-request.outputs.pull-request-number
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.DEPLOY_GITHUB_TOKEN }}
          pull-request-number: ${{  steps.create-pull-request.outputs.pull-request-number }}
